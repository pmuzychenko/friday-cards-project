{"version":3,"sources":["components/pages/SetNewPassword/Password-recovery.module.css","components/pages/Login/Login.module.css","components/common/c1-SuperInputText/SuperInputText.module.css","components/common/c3-SuperCheckbox/SuperCheckbox.module.css","components/common/c2-SuperButton/SuperButton.module.css","components/Header/Header.module.css","components/pages/Error404/Error404.module.css","components/Preloader/Preloader.module.css","components/pages/Profile/Profile.module.css","components/pages/SUperComponentsStand/SuperComponentsStand.module.css","components/pages/Error404/Error404.tsx","api/api.ts","reducers/app-reducer.ts","reducers/login-reducer.ts","components/common/c2-SuperButton/SuperButton.tsx","assets/images/preloader.gif","components/Preloader/Preloader.tsx","components/pages/Login/Login.tsx","reducers/password-recovery-reducer.ts","components/pages/Password-recovery/Password-recovery.tsx","components/pages/Profile/Profile.tsx","reducers/set-new-password-reducer.ts","components/pages/SetNewPassword/SetNewPassword.tsx","reducers/signUp-reducer.ts","components/common/c1-SuperInputText/SuperInputText.tsx","components/pages/Sign-up/Sign-up.tsx","components/common/c3-SuperCheckbox/SuperCheckbox.tsx","components/pages/SUperComponentsStand/SuperComponentsStand.tsx","components/Routes/Routes.tsx","components/Header/Header.tsx","components/App/App.tsx","reducers/profile-reducer.ts","reducers/store.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","Error404","className","styles","error404","instance","axios","create","baseURL","withCredentials","RequestForgetPasswordObject","email","from","message","api","data","post","delete","password","resetPasswordToken","initialState","status","error","setAppStatusAC","type","setAppErrorAC","isLoggedIn","setIsLoggedInAC","value","setUserDataAC","SuperButton","red","restProps","finalClassName","s","default","Preloader","style","loader","src","preloader","alt","Login","useState","setEmail","setPassword","rememberMe","setRememberMe","dispatch","useDispatch","isUserLoggedIn","useSelector","state","login","appStatus","userProfileData","to","errorBlock","onSubmit","e","preventDefault","then","res","catch","response","formFields","placeholder","pattern","onChange","event","currentTarget","formFieldsInput","checked","name","id","htmlFor","disabled","info","forgotPasswordError","isMailSent","isLoading","forgotPasswordErrorAC","isMailSentAC","changeLoadingStatusAC","PasswordRecovery","mail","setMail","passwordRecovery","container","sentMailResponse","form","target","onKeyPress","onClick","Profile","useEffect","profile","avatar","passwordIsSet","setNewPasswordErrorAC","SetNewPassword","useParams","repeatPassword","setRepeatPassword","setError","newPassword","resetError","inputContainer","changePasswordTC","isSignUp","setIsSignUpAC","setSignUpErrorAC","SuperInputText","onChangeText","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SignUp","registration","serverError","values","setValues","errors","setErrors","color","onBlur","test","length","SuperCheckbox","onChangeChecked","children","checkbox","labelCheckbox","SuperComponentsStand","superComponentsStand","PATH","Routes","exact","path","render","Header","mainHeader","App","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","window","console","log","getState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6aef5dca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Password-recovery_container__1ykQx\",\"form\":\"Password-recovery_form__1fvWb\",\"inputContainer\":\"Password-recovery_inputContainer__3uKLO\",\"message\":\"Password-recovery_message__18NTI\",\"sentMailResponse\":\"Password-recovery_sentMailResponse__1Lk7p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formFields\":\"Login_formFields__34_pL\",\"formFieldsInput\":\"Login_formFieldsInput__9--VU\",\"errorBlock\":\"Login_errorBlock__20E5m\",\"preloader\":\"Login_preloader__2HXPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2PANA\",\"errorInput\":\"SuperInputText_errorInput__3NTsA\",\"error\":\"SuperInputText_error__13m4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelCheckbox\":\"SuperCheckbox_labelCheckbox__sWg8Q\",\"spanClassName\":\"SuperCheckbox_spanClassName__2GlpU\",\"checkbox\":\"SuperCheckbox_checkbox__ZvnGu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3X2Ig\",\"red\":\"SuperButton_red__2qa07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"Header_mainHeader__1RP1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error404\":\"Error404_error404__2oog_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__1jVOj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2x015\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superComponentsStand\":\"SuperComponentsStand_superComponentsStand__diEHf\"};","import React from \"react\";\r\nimport styles from \"./Error404.module.css\"\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n            <div className={styles.error404}>\r\n                <div>404</div>\r\n                <div>Page not found!</div>\r\n                <div>— ฅ/ᐠ. ̫  .ᐟ\\ฅ—</div>\r\n            </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\nimport { LoginFormData } from \"../reducers/login-reducer\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://neko-back.herokuapp.com/2.0`,\r\n    //baseURL: `http://localhost:7542/2.0/`,\r\n    withCredentials: true\r\n})\r\n\r\nconst RequestForgetPasswordObject: RequestForgetPasswordType = {\r\n    email: '',\r\n    from: `test-front-admin <ai73a@yandex.by>`,\r\n    message: `<div style=\"background-color: lime; padding: 15px\">password recovery link: \r\n              <a href='http://localhost:3000/friday-cards-project#/newPassword/$token$'>link</a></div>`\r\n}\r\n\r\n//api\r\nexport const api = {\r\n    login(data: LoginFormData) {\r\n        return instance.post<ResponseUserDataType>('/auth/login', data)\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/me', {})\r\n    },\r\n    authMe(){\r\n        return instance.post('/auth/me', {})\r\n    },\r\n    signUp(email: string, password: string) {\r\n        return instance.post<ResponseSignUpType>(`auth/register`, { email, password })\r\n    },\r\n    forgotPassword(email: string) {\r\n        return instance.post<ResponseForgetPasswordType>(`auth/forgot`, {...RequestForgetPasswordObject, email})\r\n    },\r\n    recoverPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<SetPasswordResponseType>(`auth/set-new-password`, {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}\r\n\r\n//types\r\nexport type ResponseUserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number // packs counter\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean // email confirmation\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\n\r\ntype ResponseSignUpType = {\r\n    addedUser: any\r\n    error?: string | null\r\n}\r\n\r\ntype RequestForgetPasswordType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\n\r\ntype ResponseForgetPasswordType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\ntype SetPasswordResponseType = {\r\n    info: string\r\n    error: string\r\n}","\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type ResponseErrorType = string | null\r\n\r\nconst initialState = {\r\n    status: 'idle' as RequestStatusType,\r\n    error: null as ResponseErrorType\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'APP/SET-ERROR': {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\ntype ActionsType = setAppStatusActionType | setAppErrorActionType\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: ResponseErrorType) => ({type: 'APP/SET-ERROR', error} as const)\r\n\r\n\r\nexport type setAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type setAppErrorActionType = ReturnType<typeof setAppErrorAC>","import {Dispatch} from \"redux\";\r\nimport {api, ResponseUserDataType} from \"../api/api\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"./app-reducer\";\r\n\r\nexport type LoginFormData = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype UserAuthData = {\r\n    data: ResponseUserDataType | null\r\n    isLoggedIn: boolean\r\n}\r\n\r\nconst initialState: UserAuthData = {\r\n    isLoggedIn: false,\r\n    data: null\r\n}\r\n\r\nexport const loginReducer = (state: UserAuthData = initialState, action: ActionsType): UserAuthData => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN': {\r\n            return {...state, isLoggedIn: action.value}\r\n        }\r\n        case 'login/SET-USER-DATA': {\r\n            return {...state, data: action.data}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\nexport const setUserDataAC = (data: ResponseUserDataType | null) =>\r\n    ({type: 'login/SET-USER-DATA', data} as const)\r\n\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginFormData) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    api.login(data)\r\n        .then((res) => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setUserDataAC(res.data))\r\n        })\r\n        .catch((e) => {\r\n            dispatch(setAppStatusAC('failed'))\r\n            const error: string = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            dispatch(setAppErrorAC('Error: ' + error))\r\n        })\r\n}\r\n\r\nexport const authMeTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    api.authMe()\r\n        .then((res) => {\r\n            dispatch(setUserDataAC(res.data))\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch((e) => {\r\n            dispatch(setAppStatusAC('failed'))\r\n            const error: string = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            dispatch(setAppErrorAC('Error: ' + error))\r\n        })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    //dispatch(setAppStatusAC('loading'))\r\n    api.logout()\r\n        .then((res) => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setUserDataAC(null))\r\n        })\r\n        .catch((e) => {\r\n            dispatch(setAppStatusAC('failed'))\r\n            const error: string = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            dispatch(setAppErrorAC('Error: ' + error))\r\n        })\r\n}\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setUserDataAC>\r\n    | ReturnType<typeof setAppErrorAC>\r\n\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nexport const SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","export default __webpack_public_path__ + \"static/media/preloader.9ca08101.gif\";","import preloader from '../../assets/images/preloader.gif'\r\nimport style from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={style.loader}>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n}","import React, { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport styles from \"./Login.module.css\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppRootStateType } from \"../../../reducers/store\";\r\nimport { RequestStatusType } from \"../../../reducers/app-reducer\";\r\nimport { loginTC } from \"../../../reducers/login-reducer\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport { Preloader } from \"../../Preloader/Preloader\";\r\nimport {ResponseUserDataType} from \"../../../api/api\";\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const isUserLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.appStatus.error)\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.appStatus.status)\r\n    const userProfileData = useSelector<AppRootStateType, ResponseUserDataType | null>(state => state.login.data)\r\n\r\n    if (isUserLoggedIn || userProfileData) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    const emailHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n\r\n    const passwordHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const rememberMeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(event.currentTarget.checked)\r\n    }\r\n\r\n    const submitLoginFormData = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        const loginFormData = { email, password, rememberMe }\r\n        dispatch(loginTC(loginFormData))\r\n        setEmail('')\r\n        setPassword('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {error && <div className={styles.errorBlock}>{error}</div>}\r\n\r\n            <form onSubmit={submitLoginFormData}>\r\n\r\n                <div className={styles.formFields}>\r\n                    <input type=\"text\"\r\n                        placeholder={'Enter your email'}\r\n                        value={email}\r\n                        pattern={\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\"}\r\n                        onChange={emailHandler}\r\n                        className={styles.formFieldsInput}\r\n                    />\r\n                    <input type=\"password\"\r\n                        placeholder={'Enter your password'}\r\n                        value={password}\r\n                        //    pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\"\r\n                        onChange={passwordHandler}\r\n                        className={styles.formFieldsInput}\r\n                    />\r\n                    <div>\r\n                        <input type=\"checkbox\"\r\n                            checked={rememberMe}\r\n                            onChange={rememberMeHandler}\r\n                            name=\"checkbox\"\r\n                            id=\"checkbox\"\r\n                        />\r\n                        <label htmlFor=\"checkbox\">Remember me</label>\r\n                    </div>\r\n                    <SuperButton type={'submit'} disabled={status === 'loading'}>Submit</SuperButton>\r\n                </div>\r\n                {status === 'loading' && <Preloader />}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport { api } from \"../api/api\";\r\n\r\nconst initialState = {\r\n    info: \"\",\r\n    forgotPasswordError: \"\",\r\n    isMailSent: false,\r\n    isLoading: false\r\n}\r\nexport type InitialStatePasswordRecoveryType = typeof initialState\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStatePasswordRecoveryType = initialState, action: ActionsType): InitialStatePasswordRecoveryType => {\r\n    switch (action.type) {\r\n        case \"FORGOT-PASSWORD-RESPONSE\":\r\n            return {...state, info: action.info}\r\n\r\n        case \"SET-FORGOT-PASSWORD-ERROR\":\r\n            return {...state, forgotPasswordError: action.forgotPasswordError}\r\n\r\n        case 'IS-MAIL-SENT':\r\n            return {...state, isMailSent: action.isMailSent}\r\n\r\n        case 'CHANGE-LOADING-STATUS' :\r\n            return {...state, isLoading: action.isLoading}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const ResponseForgotPasswordAC = (info: string) => ({\r\n    type: \"FORGOT-PASSWORD-RESPONSE\",\r\n    info\r\n}) as const\r\n\r\nexport const forgotPasswordErrorAC = (forgotPasswordError: string) => ({\r\n    type: 'SET-FORGOT-PASSWORD-ERROR',\r\n    forgotPasswordError\r\n}) as const\r\n\r\nexport const isMailSentAC = (isMailSent: boolean) => {\r\n    return ({\r\n        type: 'IS-MAIL-SENT',\r\n        isMailSent\r\n    }) as const\r\n}\r\n\r\nexport const changeLoadingStatusAC = (isLoading: boolean) => {\r\n    return ({\r\n        type: 'CHANGE-LOADING-STATUS',\r\n        isLoading\r\n    }) as const\r\n}\r\n\r\nexport const sentMailTC = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(changeLoadingStatusAC(true))\r\n    api.forgotPassword(email)\r\n        .then(res => {\r\n            dispatch(ResponseForgotPasswordAC(res.data.info))\r\n            dispatch(isMailSentAC(true))\r\n            dispatch(changeLoadingStatusAC(false))\r\n        })\r\n        .catch(error => {\r\n            dispatch(forgotPasswordErrorAC(error.response.data.error))\r\n            dispatch(isMailSentAC(false))\r\n            dispatch(changeLoadingStatusAC(false))\r\n        })\r\n\r\n}\r\n\r\n//types\r\ntype ActionsType =\r\n    ReturnType<typeof ResponseForgotPasswordAC>\r\n    | ReturnType<typeof forgotPasswordErrorAC>\r\n    | ReturnType<typeof isMailSentAC>\r\n    | ReturnType<typeof changeLoadingStatusAC>","import React, {ChangeEvent, useState} from \"react\";\r\nimport style from '../SetNewPassword/Password-recovery.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Preloader} from \"../../Preloader/Preloader\";\r\nimport { AppRootStateType } from \"../../../reducers/store\";\r\nimport { forgotPasswordErrorAC, InitialStatePasswordRecoveryType, sentMailTC } from \"../../../reducers/password-recovery-reducer\";\r\n\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [mail, setMail] = useState('')\r\n    const dispatch = useDispatch()\r\n    const passwordRecovery = useSelector<AppRootStateType, InitialStatePasswordRecoveryType>(state => state.passwordRecovery)\r\n\r\n\r\n    const changeMailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setMail(e.target.value)\r\n    }\r\n\r\n    const sendMailHandler = () => {\r\n        dispatch(sentMailTC(mail))\r\n    }\r\n\r\n    const resetError = () => {\r\n        dispatch(forgotPasswordErrorAC(''))\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            Password-recovery page will be here\r\n            {passwordRecovery.isLoading && <Preloader/>}\r\n            {passwordRecovery.isMailSent ?\r\n                <div className={style.sentMailResponse}>click the link in the message in your email\r\n                    <span>{passwordRecovery.info}</span>\r\n                </div> : <div>\r\n                    <div className={style.form}>\r\n                        <input type=\"text\" placeholder='Enter your email' value={mail} onChange={changeMailHandler}\r\n                               onKeyPress={resetError}/>\r\n                        {passwordRecovery.forgotPasswordError !== \"\" &&\r\n                        <span className={style.message}>{passwordRecovery.forgotPasswordError}</span>\r\n                        }\r\n                        <button onClick={sendMailHandler}>Send</button>\r\n                    </div>\r\n\r\n                </div>}\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { ResponseUserDataType } from \"../../../api/api\";\r\n\r\nimport { AppRootStateType } from \"../../../reducers/store\";\r\nimport styles from \"./Profile.module.css\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {authMeTC} from \"../../../reducers/login-reducer\";\r\nimport {RequestStatusType} from \"../../../reducers/app-reducer\";\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userProfileData = useSelector<AppRootStateType, ResponseUserDataType | null>(state => state.login.data)\r\n    const isUserLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.appStatus.status)\r\n\r\n    useEffect(() => {\r\n        !userProfileData && dispatch(authMeTC())\r\n    }, [])\r\n\r\n    if (!userProfileData && !isUserLoggedIn && status!=='idle' && status!=='loading') {\r\n        return <Redirect to={'/login'} />\r\n    }\r\n\r\n    return (\r\n        <div className={styles.profile}>\r\n            {userProfileData && <div>\r\n                User name: {userProfileData.name}\r\n                User email: {userProfileData.email}\r\n                User avatar: {userProfileData.avatar}\r\n            </div> }\r\n        </div>\r\n    );\r\n}","import {Dispatch} from \"redux\";\r\nimport { api } from \"../api/api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    error: '',\r\n    passwordIsSet: false\r\n}\r\n\r\nexport type InitialStateType = {\r\n    error: string\r\n    passwordIsSet: boolean\r\n}\r\n\r\nexport const setNewPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-NEW-PASSWORD\":\r\n            return {...state, passwordIsSet: action.passwordIsSet}\r\n\r\n        case \"SET-NEW-PASSWORD-ERROR\": {\r\n            return {...state, error: action.error}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setNewPasswordAC = (passwordIsSet: boolean) => ({\r\n    type: 'SET-NEW-PASSWORD',\r\n    passwordIsSet\r\n}) as const\r\n\r\nexport const setNewPasswordErrorAC = (error: string) => ({\r\n    type: \"SET-NEW-PASSWORD-ERROR\",\r\n    error\r\n}) as const\r\n\r\n//thunks\r\nexport const changePasswordTC = (password: string, resetPasswordToken: string) => (dispatch: Dispatch) => {\r\n    api.recoverPassword(password, resetPasswordToken)\r\n        .then(res => {\r\n            dispatch(setNewPasswordAC(true))\r\n        })\r\n        .catch(error => {\r\n            dispatch(setNewPasswordErrorAC(error.response.data.error))\r\n        })\r\n}\r\n\r\n//types\r\ntype ActionsType = ReturnType<typeof setNewPasswordAC> | ReturnType<typeof setNewPasswordErrorAC>\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport style from \"./Password-recovery.module.css\";\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { changePasswordTC, InitialStateType, setNewPasswordErrorAC } from \"../../../reducers/set-new-password-reducer\";\r\nimport { AppRootStateType } from \"../../../reducers/store\";\r\n\r\n\r\nexport const SetNewPassword = () => {\r\n    const {resetPasswordToken} = useParams<{ resetPasswordToken: string }>()\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n    const newPassword = useSelector<AppRootStateType, InitialStateType>(state => state.newPassword)\r\n    const dispatch = useDispatch()\r\n\r\n    const changePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const changeRepeatPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRepeatPassword(e.target.value)\r\n    }\r\n\r\n    const sendNewPassword = () => {\r\n        if (password === repeatPassword) {\r\n            dispatch(changePasswordTC(password, resetPasswordToken))\r\n        } else {\r\n            setError('Passwords are not equal')\r\n        }\r\n    }\r\n\r\n    const resetError = () => {\r\n        setError('')\r\n        dispatch(setNewPasswordErrorAC(''))\r\n    }\r\n\r\n    if (newPassword.passwordIsSet) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            Page with form for new password entering will be here\r\n            <div className={style.message}>{error}</div>\r\n            <div className={style.inputContainer}>\r\n                <input type=\"text\" placeholder='set new password' value={password} onChange={changePasswordHandler}\r\n                       onKeyPress={resetError}/>\r\n                {newPassword.error !== \"\" && <span className={style.message}>{newPassword.error}</span>}\r\n            </div>\r\n            <div className={style.inputContainer}>\r\n                <input type=\"text\" placeholder='set new password' value={repeatPassword}\r\n                       onChange={changeRepeatPasswordHandler} onKeyPress={resetError}/>\r\n            </div>\r\n            <button onClick={sendNewPassword}>set new password</button>\r\n        </div>\r\n    );\r\n}","import { Dispatch } from \"redux\"\r\nimport { api } from \"../api/api\"\r\n\r\nconst initialState = {\r\n    isSignUp: false,\r\n    error: null\r\n}\r\ntype InitialStateType = {\r\n    isSignUp: boolean\r\n    error: string | null\r\n}\r\n\r\nexport const signUpReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-IS-SIGN-UP': {\r\n            return { ...state, isSignUp: action.value }\r\n        }\r\n        case 'SET-ERROR-SIGN-UP': {\r\n            return { ...state, error: action.error }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// thunks\r\nexport const signUpTC = (email: string, password: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    api.signUp(email, password)\r\n        .then(res => {\r\n            // console.log(res)\r\n            dispatch(setIsSignUpAC(true))\r\n        })\r\n        .catch(error => {\r\n            // console.log(error)\r\n            dispatch(setSignUpErrorAC(error.response.data.error))\r\n        })\r\n}\r\n\r\n// actions\r\nexport const setIsSignUpAC = (value: boolean) => ({ type: 'SET-IS-SIGN-UP', value } as const)\r\nexport const setSignUpErrorAC = (error: string | null) => ({ type: 'SET-ERROR-SIGN-UP', error } as const)\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsSignUpAC> | ReturnType<typeof setSignUpErrorAC>","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n  // const finalInputClassName = `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`; // need to fix with (?:) and s.superInput\r\n    return (\r\n        <>\r\n            <input\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUpTC } from \"../../../reducers/signUp-reducer\";\r\nimport { AppRootStateType } from \"../../../reducers/store\";\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\n\r\ntype SignUpValuesType = {\r\n    email: string,\r\n    password: string,\r\n    repeatPassword: string,\r\n}\r\n\r\ntype ErrorsType = {\r\n    email?: string,\r\n    password?: string,\r\n    repeatPassword?: string,\r\n}\r\n\r\nexport const SignUp = () => {\r\n    const dispatch = useDispatch()\r\n    const isSignUp = useSelector<AppRootStateType, boolean>((state) => state.registration.isSignUp)\r\n    const serverError = useSelector<AppRootStateType, string | null>((state) => state.registration.error)\r\n\r\n\r\n    const [values, setValues] = useState<SignUpValuesType>({\r\n        email: '',\r\n        password: '',\r\n        repeatPassword: ''\r\n    })\r\n\r\n    const [errors, setErrors] = useState<ErrorsType>({})\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, email: e.currentTarget.value })\r\n    }\r\n\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, password: e.currentTarget.value })\r\n    }\r\n\r\n    const onChangeRepeatPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, repeatPassword: e.currentTarget.value })\r\n    }\r\n\r\n    const validateEmail = () => {\r\n        if (!values.email) {\r\n            setErrors({ ...errors, email: 'Required' })\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            setErrors({ ...errors, email: 'Invalid email address' })\r\n        } else {\r\n            setErrors({ ...errors, email: '' })\r\n        }\r\n    }\r\n\r\n    const validatePassword = () => {\r\n        if (!values.password) {\r\n            setErrors({ ...errors, password: 'Required' })\r\n        } else if (values.password.length < 8) {\r\n            setErrors({ ...errors, password: 'The min length of password should be 7' })\r\n        } else {\r\n            setErrors({ ...errors, password: '' })\r\n        }\r\n    }\r\n\r\n\r\n    const validateRepeatPassword = () => {\r\n        if (!values.repeatPassword) {\r\n            setErrors({ ...errors, repeatPassword: 'Required' })\r\n        } else if (values.password !== values.repeatPassword) {\r\n            setErrors({ ...errors, repeatPassword: 'This password does not match that entered in the password field, please try again' })\r\n        } else {\r\n            setErrors({ ...errors, repeatPassword: '' })\r\n        }\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (!values.email) {\r\n            setErrors({ ...errors, email: 'Required' })\r\n        } else if (!values.password) {\r\n            setErrors({ ...errors, password: 'Required' })\r\n        } else if (!values.repeatPassword) {\r\n            setErrors({ ...errors, repeatPassword: 'Required' })\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            setErrors({ ...errors, email: 'Invalid email address' })\r\n        } else if (values.password.length < 8) {\r\n            setErrors({ ...errors, password: 'Password must be more than 7 character' })\r\n        } else if (values.password !== values.repeatPassword) {\r\n            setErrors({ ...errors, repeatPassword: 'This password does not match that entered in the password field, please try again' })\r\n        } else {\r\n            dispatch(signUpTC(values.email, values.password))\r\n        }\r\n    }\r\n\r\n    if (isSignUp) {\r\n        return <Redirect to={'/login'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>REGISTRATION</h2>\r\n            <div>\r\n                <div>\r\n                    {serverError ? <div style={{ color: 'red' }}>{serverError}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <label>Email:</label>\r\n                    <SuperInputText\r\n                        type='text'\r\n                        name='email'\r\n                        placeholder='Enter email'\r\n                        value={values.email}\r\n                        onChange={onChangeEmailHandler}\r\n                        onBlur={validateEmail} />\r\n                </div>\r\n                {errors.email ? <div style={{ color: 'red' }}>{errors.email}</div> : null}\r\n                <div>\r\n                    <label>Password:</label>\r\n                    <SuperInputText\r\n                        type='password'\r\n                        name='password'\r\n                        placeholder='Enter password'\r\n                        value={values.password}\r\n                        onChange={onChangePasswordHandler}\r\n                        onBlur={validatePassword} />\r\n                </div>\r\n                {errors.password ? <div style={{ color: 'red' }}>{errors.password}</div> : null}\r\n                <div>\r\n                    <label>Repeat password:</label>\r\n                    <SuperInputText\r\n                        type='password'\r\n                        name='repeatPassword'\r\n                        placeholder='Repeat password'\r\n                        value={values.repeatPassword}\r\n                        onChange={onChangeRepeatPasswordHandler}\r\n                        onBlur={validateRepeatPassword} />\r\n                </div>\r\n                {errors.repeatPassword ? <div style={{ color: 'red' }}>{errors.repeatPassword}</div> : null}\r\n                <SuperButton\r\n                    onClick={handleSubmit}\r\n                >SIGN UP</SuperButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.labelCheckbox}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React from \"react\";\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport styles from \"./SuperComponentsStand.module.css\"\r\n\r\nexport const SuperComponentsStand = () => {\r\n    return (\r\n        <div className={styles.superComponentsStand}>\r\n            <SuperInputText />\r\n            <SuperButton> Button </SuperButton>\r\n            <SuperCheckbox />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Route, Switch, Redirect} from \"react-router-dom\";\r\nimport {Error404} from \"../pages/Error404/Error404\";\r\nimport {Login} from \"../pages/Login/Login\";\r\nimport {PasswordRecovery} from \"../pages/Password-recovery/Password-recovery\";\r\nimport {Profile} from \"../pages/Profile/Profile\";\r\nimport {SetNewPassword} from \"../pages/SetNewPassword/SetNewPassword\";\r\nimport {SignUp} from \"../pages/Sign-up/Sign-up\";\r\nimport {SuperComponentsStand} from \"../pages/SUperComponentsStand/SuperComponentsStand\";\r\n\r\n\r\nexport const PATH = {\r\n    login: '/login',\r\n    passwordRecovery: '/passwordRecovery',\r\n    profile: '/profile',\r\n    signUp: '/signUp',\r\n    newPassword: '/newPassword',\r\n    superComponentsStand: '/superComponentsStand',\r\n    error: '/404'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={'/'} render={() => <Redirect to={PATH.login}/>}/>\r\n                <Route path={PATH.login} render={() => <Login/>}/>\r\n                <Route exact path={PATH.profile} render={() => <Profile/>}/>\r\n                <Route exact path={PATH.passwordRecovery} render={() => <PasswordRecovery/>}/>\r\n                <Route exact path={PATH.signUp} render={() => <SignUp/>}/>\r\n                <Route path={`${PATH.newPassword}/:resetPasswordToken`} render={() => <SetNewPassword/>}/>\r\n                <Route exact path={PATH.superComponentsStand} render={() => <SuperComponentsStand/>}/>\r\n                <Route path={PATH.error} render={() => <Error404/>}/>\r\n                <Redirect from={'*'} to={PATH.error}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes/Routes\";\r\nimport styles from \"./Header.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../reducers/store\";\r\nimport {logoutTC} from \"../../reducers/login-reducer\";\r\nimport {ResponseUserDataType} from \"../../api/api\";\r\n\r\nfunction Header() {\r\n    const dispatch = useDispatch()\r\n    const userProfileData = useSelector<AppRootStateType, ResponseUserDataType | null>(state => state.login.data)\r\n    const isUserLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const onLogoutClick = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    if (userProfileData && isUserLoggedIn) {\r\n        return <div className={styles.mainHeader}>\r\n            <nav>\r\n                <NavLink to={PATH.profile}>{'profile'}</NavLink>\r\n                <NavLink to={PATH.signUp}>{'sign-up'}</NavLink>\r\n                <NavLink to={PATH.passwordRecovery}>{'password-recovery'}</NavLink>\r\n                <NavLink to={PATH.newPassword}>{'new-password'}</NavLink>\r\n                <button onClick={onLogoutClick}>logout</button>\r\n            </nav>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.mainHeader}>\r\n            <nav>\r\n                <NavLink to={PATH.login}>{'login'}</NavLink>\r\n                <NavLink to={PATH.profile}>{'profile'}</NavLink>\r\n                <NavLink to={PATH.signUp}>{'sign-up'}</NavLink>\r\n                <NavLink to={PATH.passwordRecovery}>{'password-recovery'}</NavLink>\r\n                <NavLink to={PATH.newPassword}>{'new-password'}</NavLink>\r\n                <NavLink to={PATH.superComponentsStand}>{'superComponentsStand'}</NavLink>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport {Routes} from \"../Routes/Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n\r\nexport const App = () => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <HashRouter>\r\n            <Header/>\r\n            <Routes/>\r\n        </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n","const initialState = {}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}","import {applyMiddleware, combineReducers} from \"redux\";\r\nimport {createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {passwordRecoveryReducer} from \"./password-recovery-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {setNewPasswordReducer} from \"./set-new-password-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\nimport { signUpReducer } from \"./signUp-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    registration: signUpReducer,\r\n    profile: profileReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    newPassword: setNewPasswordReducer,\r\n    appStatus: appReducer\r\n});\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\nconsole.log(store.getState())","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { App } from './components/App/App';\r\nimport './index.css';\r\nimport { store } from './reducers/store';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}