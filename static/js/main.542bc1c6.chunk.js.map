{"version":3,"sources":["components/pages/SetNewPassword/Password-recovery.module.css","components/pages/Login/Login.module.css","components/common/c1-SuperInputText/SuperInputText.module.css","components/common/c3-SuperCheckbox/SuperCheckbox.module.css","components/common/c2-SuperButton/SuperButton.module.css","components/pages/Error404/Error404.module.css","components/Preloader/Preloader.module.css","components/pages/Profile/Profile.module.css","components/pages/SUperComponentsStand/SuperComponentsStand.module.css","components/Header/Header.module.css","components/pages/Error404/Error404.tsx","api/api.ts","reducers/app-reducer.ts","reducers/login-reducer.ts","components/common/c2-SuperButton/SuperButton.tsx","assets/images/preloader.gif","components/Preloader/Preloader.tsx","components/pages/Login/Login.tsx","reducers/password-recovery-reducer.ts","components/pages/Password-recovery/Password-recovery.tsx","components/pages/Profile/Profile.tsx","reducers/set-new-password-reducer.ts","components/pages/SetNewPassword/SetNewPassword.tsx","reducers/signUp-reducer.ts","components/common/c1-SuperInputText/SuperInputText.tsx","components/pages/Sign-up/Sign-up.tsx","components/common/c3-SuperCheckbox/SuperCheckbox.tsx","components/pages/SUperComponentsStand/SuperComponentsStand.tsx","components/Routes/Routes.tsx","components/Header/Header.tsx","components/App/App.tsx","reducers/profile-reducer.ts","reducers/store.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","Error404","className","styles","error404","instance","axios","create","baseURL","withCredentials","RequestForgetPasswordObject","email","from","message","api","data","post","password","resetPasswordToken","initialState","status","error","setAppStatusAC","type","isLoggedIn","SuperButton","red","restProps","finalClassName","s","default","Preloader","style","loader","src","preloader","alt","Login","useState","setEmail","setPassword","rememberMe","setRememberMe","dispatch","useDispatch","isUserLoggedIn","useSelector","state","login","appStatus","to","errorBlock","onSubmit","e","preventDefault","then","res","value","setUserDataAC","catch","response","setAppErrorAC","formFields","placeholder","pattern","onChange","event","currentTarget","formFieldsInput","checked","name","id","htmlFor","disabled","info","forgotPasswordError","isMailSent","isLoading","forgotPasswordErrorAC","isMailSentAC","changeLoadingStatusAC","PasswordRecovery","mail","setMail","passwordRecovery","container","sentMailResponse","form","target","onKeyPress","onClick","Profile","userProfileData","profile","passwordIsSet","setNewPasswordErrorAC","SetNewPassword","useParams","repeatPassword","setRepeatPassword","setError","newPassword","resetError","inputContainer","changePasswordTC","isSignUp","setIsSignUpAC","setSignUpErrorAC","SuperInputText","onChangeText","onEnter","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SignUp","registration","serverError","values","setValues","errors","setErrors","color","onBlur","test","length","SuperCheckbox","onChangeChecked","children","checkbox","labelCheckbox","SuperComponentsStand","superComponentsStand","PATH","Routes","exact","path","render","Header","mainHeader","App","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","window","console","log","getState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.542bc1c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Password-recovery_container__1dS7Q\",\"form\":\"Password-recovery_form__1-g2a\",\"inputContainer\":\"Password-recovery_inputContainer__3IWEj\",\"message\":\"Password-recovery_message__fMlll\",\"sentMailResponse\":\"Password-recovery_sentMailResponse__1zh2B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formFields\":\"Login_formFields__2xrC6\",\"formFieldsInput\":\"Login_formFieldsInput__1P-ea\",\"errorBlock\":\"Login_errorBlock__LL1Vp\",\"preloader\":\"Login_preloader__1nNcz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1kErw\",\"errorInput\":\"SuperInputText_errorInput__3ZvIx\",\"error\":\"SuperInputText_error__2WCie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelCheckbox\":\"SuperCheckbox_labelCheckbox__vVgOL\",\"spanClassName\":\"SuperCheckbox_spanClassName__2nmKi\",\"checkbox\":\"SuperCheckbox_checkbox__1NnsH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__s26iU\",\"red\":\"SuperButton_red__2LwKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error404\":\"Error404_error404__3GaOV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloader_loader__2rl41\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__27UMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superComponentsStand\":\"SuperComponentsStand_superComponentsStand__Pqbp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"Header_mainHeader__27Mhg\"};","import React from \"react\";\r\nimport styles from \"./Error404.module.css\"\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n            <div className={styles.error404}>\r\n                <div>404</div>\r\n                <div>Page not found!</div>\r\n                <div>— ฅ/ᐠ. ̫  .ᐟ\\ฅ—</div>\r\n            </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\nimport { LoginFormData } from \"../reducers/login-reducer\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://neko-back.herokuapp.com/2.0`,\r\n    //baseURL: `http://localhost:7542/2.0/`,\r\n    withCredentials: true\r\n})\r\n\r\nconst RequestForgetPasswordObject: RequestForgetPasswordType = {\r\n    email: '',\r\n    from: `test-front-admin <ai73a@yandex.by>`,\r\n    message: `<div style=\"background-color: lime; padding: 15px\">password recovery link: \r\n              <a href='http://localhost:3000/friday-cards-project#/newPassword/$token$'>link</a></div>`\r\n}\r\n\r\n//api\r\nexport const api = {\r\n    login(data: LoginFormData) {\r\n        return instance.post<ResponseUserDataType>('/auth/login', data)\r\n    },\r\n    signUp(email: string, password: string) {\r\n        return instance.post<ResponseSignUpType>(`auth/register`, { email, password })\r\n    },\r\n    forgotPassword(email: string) {\r\n        return instance.post<ResponseForgetPasswordType>(`auth/forgot`, {...RequestForgetPasswordObject, email})\r\n    },\r\n    recoverPassword(password: string, resetPasswordToken: string) {\r\n        return instance.post<SetPasswordResponseType>(`auth/set-new-password`, {\r\n            password,\r\n            resetPasswordToken\r\n        })\r\n    }\r\n}\r\n\r\n//types\r\nexport type ResponseUserDataType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number // packs counter\r\n    created: string\r\n    updated: string\r\n    isAdmin: boolean\r\n    verified: boolean // email confirmation\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\n\r\ntype ResponseSignUpType = {\r\n    addedUser: any\r\n    error?: string | null\r\n}\r\n\r\ntype RequestForgetPasswordType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\n\r\ntype ResponseForgetPasswordType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\ntype SetPasswordResponseType = {\r\n    info: string\r\n    error: string\r\n}","\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type ResponseErrorType = string | null\r\n\r\nconst initialState = {\r\n    status: 'idle' as RequestStatusType,\r\n    error: null as ResponseErrorType\r\n}\r\ntype InitialStateType = typeof initialState\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'APP/SET-ERROR': {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\ntype ActionsType = setAppStatusActionType | setAppErrorActionType\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: ResponseErrorType) => ({type: 'APP/SET-ERROR', error} as const)\r\n\r\n\r\nexport type setAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type setAppErrorActionType = ReturnType<typeof setAppErrorAC>","import {Dispatch} from \"redux\";\r\nimport { api, ResponseUserDataType } from \"../api/api\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"./app-reducer\";\r\n\r\nexport type LoginFormData = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype UserAuthData = {\r\n    data: ResponseUserDataType | null\r\n    isLoggedIn: boolean\r\n}\r\n\r\nconst initialState: UserAuthData = {\r\n    isLoggedIn: false,\r\n    data: null\r\n}\r\n\r\nexport const loginReducer = (state: UserAuthData = initialState, action: ActionsType): UserAuthData => {\r\n    switch (action.type) {\r\n        case 'login/SET-IS-LOGGED-IN': {\r\n            return {...state, isLoggedIn: action.value}\r\n        }\r\n        case 'login/SET-USER-DATA': {\r\n            return {...state, data: action.data}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsLoggedInAC = (value: boolean) =>\r\n    ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\n\r\nexport const setUserDataAC = (data: ResponseUserDataType) =>\r\n    ({type: 'login/SET-USER-DATA', data} as const)\r\n\r\n\r\n// thunks\r\nexport const loginTC = (data: LoginFormData) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    api.login(data)\r\n        .then((res) => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setUserDataAC(res.data))\r\n        })\r\n        .catch((e) => {\r\n            dispatch(setAppStatusAC('failed'))\r\n            const error: string = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            dispatch(setAppErrorAC('Error: ' + error))\r\n        })\r\n}\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setUserDataAC>\r\n    | ReturnType<typeof setAppErrorAC>\r\n\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nexport const SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","export default __webpack_public_path__ + \"static/media/preloader.9ca08101.gif\";","import preloader from '../../assets/images/preloader.gif'\r\nimport style from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={style.loader}>\r\n            <img src={preloader} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n}","import React, { ChangeEvent, FormEvent, useState } from \"react\";\r\nimport styles from \"./Login.module.css\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AppRootStateType } from \"../../../reducers/store\";\r\nimport { RequestStatusType } from \"../../../reducers/app-reducer\";\r\nimport { loginTC } from \"../../../reducers/login-reducer\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport { Preloader } from \"../../Preloader/Preloader\";\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const isUserLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.appStatus.error)\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.appStatus.status)\r\n\r\n    if (isUserLoggedIn) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    const emailHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n\r\n    const passwordHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n    const rememberMeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(event.currentTarget.checked)\r\n    }\r\n\r\n    const submitLoginFormData = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        const loginFormData = { email, password, rememberMe }\r\n        dispatch(loginTC(loginFormData))\r\n        setEmail('')\r\n        setPassword('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {error && <div className={styles.errorBlock}>{error}</div>}\r\n\r\n            <form onSubmit={submitLoginFormData}>\r\n\r\n                <div className={styles.formFields}>\r\n                    <input type=\"text\"\r\n                        placeholder={'Enter your email'}\r\n                        value={email}\r\n                        pattern={\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\"}\r\n                        onChange={emailHandler}\r\n                        className={styles.formFieldsInput}\r\n                    />\r\n                    <input type=\"password\"\r\n                        placeholder={'Enter your password'}\r\n                        value={password}\r\n                        //    pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\"\r\n                        onChange={passwordHandler}\r\n                        className={styles.formFieldsInput}\r\n                    />\r\n                    <div>\r\n                        <input type=\"checkbox\"\r\n                            checked={rememberMe}\r\n                            onChange={rememberMeHandler}\r\n                            name=\"checkbox\"\r\n                            id=\"checkbox\"\r\n                        />\r\n                        <label htmlFor=\"checkbox\">Remember me</label>\r\n                    </div>\r\n                    <SuperButton type={'submit'} disabled={status === 'loading'}>Submit</SuperButton>\r\n                </div>\r\n                {status === 'loading' && <Preloader />}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport { api } from \"../api/api\";\r\n\r\nconst initialState = {\r\n    info: \"\",\r\n    forgotPasswordError: \"\",\r\n    isMailSent: false,\r\n    isLoading: false\r\n}\r\nexport type InitialStatePasswordRecoveryType = typeof initialState\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStatePasswordRecoveryType = initialState, action: ActionsType): InitialStatePasswordRecoveryType => {\r\n    switch (action.type) {\r\n        case \"FORGOT-PASSWORD-RESPONSE\":\r\n            return {...state, info: action.info}\r\n\r\n        case \"SET-FORGOT-PASSWORD-ERROR\":\r\n            return {...state, forgotPasswordError: action.forgotPasswordError}\r\n\r\n        case 'IS-MAIL-SENT':\r\n            return {...state, isMailSent: action.isMailSent}\r\n\r\n        case 'CHANGE-LOADING-STATUS' :\r\n            return {...state, isLoading: action.isLoading}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const ResponseForgotPasswordAC = (info: string) => ({\r\n    type: \"FORGOT-PASSWORD-RESPONSE\",\r\n    info\r\n}) as const\r\n\r\nexport const forgotPasswordErrorAC = (forgotPasswordError: string) => ({\r\n    type: 'SET-FORGOT-PASSWORD-ERROR',\r\n    forgotPasswordError\r\n}) as const\r\n\r\nexport const isMailSentAC = (isMailSent: boolean) => {\r\n    return ({\r\n        type: 'IS-MAIL-SENT',\r\n        isMailSent\r\n    }) as const\r\n}\r\n\r\nexport const changeLoadingStatusAC = (isLoading: boolean) => {\r\n    return ({\r\n        type: 'CHANGE-LOADING-STATUS',\r\n        isLoading\r\n    }) as const\r\n}\r\n\r\nexport const sentMailTC = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(changeLoadingStatusAC(true))\r\n    api.forgotPassword(email)\r\n        .then(res => {\r\n            dispatch(ResponseForgotPasswordAC(res.data.info))\r\n            dispatch(isMailSentAC(true))\r\n            dispatch(changeLoadingStatusAC(false))\r\n        })\r\n        .catch(error => {\r\n            dispatch(forgotPasswordErrorAC(error.response.data.error))\r\n            dispatch(isMailSentAC(false))\r\n            dispatch(changeLoadingStatusAC(false))\r\n        })\r\n\r\n}\r\n\r\n//types\r\ntype ActionsType =\r\n    ReturnType<typeof ResponseForgotPasswordAC>\r\n    | ReturnType<typeof forgotPasswordErrorAC>\r\n    | ReturnType<typeof isMailSentAC>\r\n    | ReturnType<typeof changeLoadingStatusAC>","import React, {ChangeEvent, useState} from \"react\";\r\nimport style from '../SetNewPassword/Password-recovery.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Preloader} from \"../../Preloader/Preloader\";\r\nimport { AppRootStateType } from \"../../../reducers/store\";\r\nimport { forgotPasswordErrorAC, InitialStatePasswordRecoveryType, sentMailTC } from \"../../../reducers/password-recovery-reducer\";\r\n\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [mail, setMail] = useState('')\r\n    const dispatch = useDispatch()\r\n    const passwordRecovery = useSelector<AppRootStateType, InitialStatePasswordRecoveryType>(state => state.passwordRecovery)\r\n\r\n\r\n    const changeMailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setMail(e.target.value)\r\n    }\r\n\r\n    const sendMailHandler = () => {\r\n        dispatch(sentMailTC(mail))\r\n    }\r\n\r\n    const resetError = () => {\r\n        dispatch(forgotPasswordErrorAC(''))\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            Password-recovery page will be here\r\n            {passwordRecovery.isLoading && <Preloader/>}\r\n            {passwordRecovery.isMailSent ?\r\n                <div className={style.sentMailResponse}>click the link in the message in your email\r\n                    <span>{passwordRecovery.info}</span>\r\n                </div> : <div>\r\n                    <div className={style.form}>\r\n                        <input type=\"text\" placeholder='Enter your email' value={mail} onChange={changeMailHandler}\r\n                               onKeyPress={resetError}/>\r\n                        {passwordRecovery.forgotPasswordError !== \"\" &&\r\n                        <span className={style.message}>{passwordRecovery.forgotPasswordError}</span>\r\n                        }\r\n                        <button onClick={sendMailHandler}>Send</button>\r\n                    </div>\r\n\r\n                </div>}\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport { ResponseUserDataType } from \"../../../api/api\";\r\nimport { AppRootStateType } from \"../../../reducers/store\";\r\nimport styles from \"./Profile.module.css\"\r\n\r\nexport const Profile = () => {\r\n    const userProfileData = useSelector<AppRootStateType, ResponseUserDataType | null>(state => state.login.data)\r\n    return (\r\n        <div className={styles.profile}>\r\n            {userProfileData && <div>User name: {userProfileData.name}</div> }\r\n        </div>\r\n    );\r\n}","import {Dispatch} from \"redux\";\r\nimport { api } from \"../api/api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    error: '',\r\n    passwordIsSet: false\r\n}\r\n\r\nexport type InitialStateType = {\r\n    error: string\r\n    passwordIsSet: boolean\r\n}\r\n\r\nexport const setNewPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET-NEW-PASSWORD\":\r\n            return {...state, passwordIsSet: action.passwordIsSet}\r\n\r\n        case \"SET-NEW-PASSWORD-ERROR\": {\r\n            return {...state, error: action.error}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const setNewPasswordAC = (passwordIsSet: boolean) => ({\r\n    type: 'SET-NEW-PASSWORD',\r\n    passwordIsSet\r\n}) as const\r\n\r\nexport const setNewPasswordErrorAC = (error: string) => ({\r\n    type: \"SET-NEW-PASSWORD-ERROR\",\r\n    error\r\n}) as const\r\n\r\n//thunks\r\nexport const changePasswordTC = (password: string, resetPasswordToken: string) => (dispatch: Dispatch) => {\r\n    api.recoverPassword(password, resetPasswordToken)\r\n        .then(res => {\r\n            dispatch(setNewPasswordAC(true))\r\n        })\r\n        .catch(error => {\r\n            dispatch(setNewPasswordErrorAC(error.response.data.error))\r\n        })\r\n}\r\n\r\n//types\r\ntype ActionsType = ReturnType<typeof setNewPasswordAC> | ReturnType<typeof setNewPasswordErrorAC>\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport style from \"./Password-recovery.module.css\";\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { changePasswordTC, InitialStateType, setNewPasswordErrorAC } from \"../../../reducers/set-new-password-reducer\";\r\nimport { AppRootStateType } from \"../../../reducers/store\";\r\n\r\n\r\nexport const SetNewPassword = () => {\r\n    const {resetPasswordToken} = useParams<{ resetPasswordToken: string }>()\r\n    const [password, setPassword] = useState('')\r\n    const [repeatPassword, setRepeatPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n    const newPassword = useSelector<AppRootStateType, InitialStateType>(state => state.newPassword)\r\n    const dispatch = useDispatch()\r\n\r\n    const changePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const changeRepeatPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRepeatPassword(e.target.value)\r\n    }\r\n\r\n    const sendNewPassword = () => {\r\n        if (password === repeatPassword) {\r\n            dispatch(changePasswordTC(password, resetPasswordToken))\r\n        } else {\r\n            setError('Passwords are not equal')\r\n        }\r\n    }\r\n\r\n    const resetError = () => {\r\n        setError('')\r\n        dispatch(setNewPasswordErrorAC(''))\r\n    }\r\n\r\n    if (newPassword.passwordIsSet) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            Page with form for new password entering will be here\r\n            <div className={style.message}>{error}</div>\r\n            <div className={style.inputContainer}>\r\n                <input type=\"text\" placeholder='set new password' value={password} onChange={changePasswordHandler}\r\n                       onKeyPress={resetError}/>\r\n                {newPassword.error !== \"\" && <span className={style.message}>{newPassword.error}</span>}\r\n            </div>\r\n            <div className={style.inputContainer}>\r\n                <input type=\"text\" placeholder='set new password' value={repeatPassword}\r\n                       onChange={changeRepeatPasswordHandler} onKeyPress={resetError}/>\r\n            </div>\r\n            <button onClick={sendNewPassword}>set new password</button>\r\n        </div>\r\n    );\r\n}","import { Dispatch } from \"redux\"\r\nimport { api } from \"../api/api\"\r\n\r\nconst initialState = {\r\n    isSignUp: false,\r\n    error: null\r\n}\r\ntype InitialStateType = {\r\n    isSignUp: boolean\r\n    error: string | null\r\n}\r\n\r\nexport const signUpReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-IS-SIGN-UP': {\r\n            return { ...state, isSignUp: action.value }\r\n        }\r\n        case 'SET-ERROR-SIGN-UP': {\r\n            return { ...state, error: action.error }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// thunks\r\nexport const signUpTC = (email: string, password: string) => (dispatch: Dispatch<ActionsType>) => {\r\n    api.signUp(email, password)\r\n        .then(res => {\r\n            // console.log(res)\r\n            dispatch(setIsSignUpAC(true))\r\n        })\r\n        .catch(error => {\r\n            // console.log(error)\r\n            dispatch(setSignUpErrorAC(error.response.data.error))\r\n        })\r\n}\r\n\r\n// actions\r\nexport const setIsSignUpAC = (value: boolean) => ({ type: 'SET-IS-SIGN-UP', value } as const)\r\nexport const setSignUpErrorAC = (error: string | null) => ({ type: 'SET-ERROR-SIGN-UP', error } as const)\r\n\r\n// types\r\ntype ActionsType = ReturnType<typeof setIsSignUpAC> | ReturnType<typeof setSignUpErrorAC>","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        // type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n  // const finalInputClassName = `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`; // need to fix with (?:) and s.superInput\r\n    return (\r\n        <>\r\n            <input\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUpTC } from \"../../../reducers/signUp-reducer\";\r\nimport { AppRootStateType } from \"../../../reducers/store\";\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\n\r\ntype SignUpValuesType = {\r\n    email: string,\r\n    password: string,\r\n    repeatPassword: string,\r\n}\r\n\r\ntype ErrorsType = {\r\n    email?: string,\r\n    password?: string,\r\n    repeatPassword?: string,\r\n}\r\n\r\nexport const SignUp = () => {\r\n    const dispatch = useDispatch()\r\n    const isSignUp = useSelector<AppRootStateType, boolean>((state) => state.registration.isSignUp)\r\n    const serverError = useSelector<AppRootStateType, string | null>((state) => state.registration.error)\r\n\r\n\r\n    const [values, setValues] = useState<SignUpValuesType>({\r\n        email: '',\r\n        password: '',\r\n        repeatPassword: ''\r\n    })\r\n\r\n    const [errors, setErrors] = useState<ErrorsType>({})\r\n\r\n    const onChangeEmailHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, email: e.currentTarget.value })\r\n    }\r\n\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, password: e.currentTarget.value })\r\n    }\r\n\r\n    const onChangeRepeatPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, repeatPassword: e.currentTarget.value })\r\n    }\r\n\r\n    const validateEmail = () => {\r\n        if (!values.email) {\r\n            setErrors({ ...errors, email: 'Required' })\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            setErrors({ ...errors, email: 'Invalid email address' })\r\n        } else {\r\n            setErrors({ ...errors, email: '' })\r\n        }\r\n    }\r\n\r\n    const validatePassword = () => {\r\n        if (!values.password) {\r\n            setErrors({ ...errors, password: 'Required' })\r\n        } else if (values.password.length < 8) {\r\n            setErrors({ ...errors, password: 'The min length of password should be 7' })\r\n        } else {\r\n            setErrors({ ...errors, password: '' })\r\n        }\r\n    }\r\n\r\n\r\n    const validateRepeatPassword = () => {\r\n        if (!values.repeatPassword) {\r\n            setErrors({ ...errors, repeatPassword: 'Required' })\r\n        } else if (values.password !== values.repeatPassword) {\r\n            setErrors({ ...errors, repeatPassword: 'This password does not match that entered in the password field, please try again' })\r\n        } else {\r\n            setErrors({ ...errors, repeatPassword: '' })\r\n        }\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (!values.email) {\r\n            setErrors({ ...errors, email: 'Required' })\r\n        } else if (!values.password) {\r\n            setErrors({ ...errors, password: 'Required' })\r\n        } else if (!values.repeatPassword) {\r\n            setErrors({ ...errors, repeatPassword: 'Required' })\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n            setErrors({ ...errors, email: 'Invalid email address' })\r\n        } else if (values.password.length < 8) {\r\n            setErrors({ ...errors, password: 'Password must be more than 7 character' })\r\n        } else if (values.password !== values.repeatPassword) {\r\n            setErrors({ ...errors, repeatPassword: 'This password does not match that entered in the password field, please try again' })\r\n        } else {\r\n            dispatch(signUpTC(values.email, values.password))\r\n        }\r\n    }\r\n\r\n    if (isSignUp) {\r\n        return <Redirect to={'/login'} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>REGISTRATION</h2>\r\n            <div>\r\n                <div>\r\n                    {serverError ? <div style={{ color: 'red' }}>{serverError}</div> : null}\r\n                </div>\r\n                <div>\r\n                    <label>Email:</label>\r\n                    <SuperInputText\r\n                        type='text'\r\n                        name='email'\r\n                        placeholder='Enter email'\r\n                        value={values.email}\r\n                        onChange={onChangeEmailHandler}\r\n                        onBlur={validateEmail} />\r\n                </div>\r\n                {errors.email ? <div style={{ color: 'red' }}>{errors.email}</div> : null}\r\n                <div>\r\n                    <label>Password:</label>\r\n                    <SuperInputText\r\n                        type='password'\r\n                        name='password'\r\n                        placeholder='Enter password'\r\n                        value={values.password}\r\n                        onChange={onChangePasswordHandler}\r\n                        onBlur={validatePassword} />\r\n                </div>\r\n                {errors.password ? <div style={{ color: 'red' }}>{errors.password}</div> : null}\r\n                <div>\r\n                    <label>Repeat password:</label>\r\n                    <SuperInputText\r\n                        type='password'\r\n                        name='repeatPassword'\r\n                        placeholder='Repeat password'\r\n                        value={values.repeatPassword}\r\n                        onChange={onChangeRepeatPasswordHandler}\r\n                        onBlur={validateRepeatPassword} />\r\n                </div>\r\n                {errors.repeatPassword ? <div style={{ color: 'red' }}>{errors.repeatPassword}</div> : null}\r\n                <SuperButton\r\n                    onClick={handleSubmit}\r\n                >SIGN UP</SuperButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.labelCheckbox}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React from \"react\";\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport styles from \"./SuperComponentsStand.module.css\"\r\n\r\nexport const SuperComponentsStand = () => {\r\n    return (\r\n        <div className={styles.superComponentsStand}>\r\n            <SuperInputText />\r\n            <SuperButton> Button </SuperButton>\r\n            <SuperCheckbox />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Route, Switch, Redirect} from \"react-router-dom\";\r\nimport { Error404 } from \"../pages/Error404/Error404\";\r\nimport { Login } from \"../pages/Login/Login\";\r\nimport { PasswordRecovery } from \"../pages/Password-recovery/Password-recovery\";\r\nimport { Profile } from \"../pages/Profile/Profile\";\r\nimport { SetNewPassword } from \"../pages/SetNewPassword/SetNewPassword\";\r\nimport { SignUp } from \"../pages/Sign-up/Sign-up\";\r\nimport { SuperComponentsStand } from \"../pages/SUperComponentsStand/SuperComponentsStand\";\r\n\r\n\r\nexport const PATH = {\r\n    login: '/login',\r\n    passwordRecovery: '/passwordRecovery',\r\n    profile:'/profile',\r\n    signUp:'/signUp',\r\n    newPassword:'/newPassword',\r\n    superComponentsStand:'/superComponentsStand',\r\n    error: '/404'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={'/'} render={() => <Redirect to={PATH.login}/>} />\r\n                <Route path={PATH.login} render={()=> <Login/>}/>\r\n                <Route exact path={PATH.profile} render={()=> <Profile/>}/>\r\n                <Route exact path={PATH.passwordRecovery} render={()=> <PasswordRecovery/>}/>\r\n                <Route exact path={PATH.signUp} render={()=> <SignUp />}/>\r\n                <Route path={`${PATH.newPassword}/:resetPasswordToken`} render={()=> <SetNewPassword/>}/>\r\n                <Route exact path={PATH.superComponentsStand} render={()=> <SuperComponentsStand/>}/>\r\n                <Route path={PATH.error} render={() => <Error404/>}/>\r\n                <Redirect from={'*'} to={PATH.error}/>\r\n            </Switch>\r\n        </div>\r\n);\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes/Routes\";\r\nimport styles from \"./Header.module.css\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={styles.mainHeader}>\r\n            <nav>\r\n                <NavLink to={PATH.login}>{'login'}</NavLink>\r\n                <NavLink to={PATH.profile}>{'profile'}</NavLink>\r\n                <NavLink to={PATH.signUp}>{'sign-up'}</NavLink>\r\n                <NavLink to={PATH.passwordRecovery}>{'password-recovery'}</NavLink>\r\n                <NavLink to={PATH.newPassword}>{'new-password'}</NavLink>\r\n                <NavLink to={PATH.superComponentsStand}>{'superComponentsStand'}</NavLink>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport {Routes} from \"../Routes/Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\n\r\nexport const App = () => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <HashRouter>\r\n            <Header/>\r\n            <Routes/>\r\n        </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n","const initialState = {}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}","import {applyMiddleware, combineReducers} from \"redux\";\r\nimport {createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {passwordRecoveryReducer} from \"./password-recovery-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {setNewPasswordReducer} from \"./set-new-password-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\nimport { signUpReducer } from \"./signUp-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    registration: signUpReducer,\r\n    profile: profileReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    newPassword: setNewPasswordReducer,\r\n    appStatus: appReducer\r\n});\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\nconsole.log(store.getState())","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { App } from './components/App/App';\r\nimport './index.css';\r\nimport { store } from './reducers/store';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}